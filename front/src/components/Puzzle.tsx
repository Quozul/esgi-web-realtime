/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Gohar.Munir (https://sketchfab.com/Gohar.Munir)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-jigsaw-puzzle-pieces-16dc224022e141409982c82c5e88f8d4
Title: Low Poly Jigsaw Puzzle Pieces
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import {useFrame} from "@react-three/fiber";
import {useRef} from "react";

type GLTFResult = GLTF & {
  nodes: {
    Puzzle_Piece_1__0: THREE.Mesh;
    Puzzle_Piece_2_008802_0: THREE.Mesh;
    Puzzle_Piece_3_D31E29_0: THREE.Mesh;
    Puzzle_Piece_4_1E5AD8_0: THREE.Mesh;
    Puzzle_Piece_5_FFC107_0: THREE.Mesh;
  };
  materials: {
    Puzzle_Piece_1__0: THREE.MeshStandardMaterial;
    ["008802"]: THREE.MeshStandardMaterial;
    D31E29: THREE.MeshStandardMaterial;
    ["1E5AD8"]: THREE.MeshStandardMaterial;
    FFC107: THREE.MeshStandardMaterial;
  };
};

export default function Puzzle(props: JSX.IntrinsicElements["group"]) {
  console.log("Composant Puzzle monté");
  const { nodes, materials } = useGLTF(
    "./low_poly_jigsaw_puzzle_pieces.glb"
  ) as GLTFResult;
  const groupRef = useRef<THREE.Group>(null!);

  useFrame((state) => {
    if (!groupRef.current) return; // Sortie anticipée si la référence n'est pas définie

    const t = state.clock.getElapsedTime();
    if (groupRef.current) {
      groupRef.current.position.y = Math.sin(t) * 0.2; // Ajustement de l'amplitude du flottement
      groupRef.current.rotation.x = Math.sin(t / 4) * Math.PI * 0.05; // Ajustement de la rotation sur X
      groupRef.current.rotation.z = Math.cos(t / 4) * Math.PI * 0.05; // Ajustement de la rotation sur Z
    }
  });
  return (
    <group {...props} ref={groupRef} dispose={null}>
      <group scale={0.01}>
        <mesh
          geometry={nodes.Puzzle_Piece_1__0.geometry}
          material={materials.Puzzle_Piece_1__0}
        />
        <mesh
          geometry={nodes.Puzzle_Piece_2_008802_0.geometry}
          material={materials["008802"]}
          position={[-150, 0, 0]}
        />
        <mesh
          geometry={nodes.Puzzle_Piece_3_D31E29_0.geometry}
          material={materials.D31E29}
          position={[150, 0, 0]}
        />
        <mesh
          geometry={nodes.Puzzle_Piece_4_1E5AD8_0.geometry}
          material={materials["1E5AD8"]}
          position={[0, 150, 0]}
        />
        <mesh
          geometry={nodes.Puzzle_Piece_5_FFC107_0.geometry}
          material={materials.FFC107}
          position={[0, -150, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./low_poly_jigsaw_puzzle_pieces.glb");
